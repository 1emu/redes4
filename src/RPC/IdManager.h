/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _IDMANAGER_H_RPCGEN
#define _IDMANAGER_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#define ADDRESS_LENGHT 256

struct ProcessInformation {
	int processType;
	int processId;
	char address[ADDRESS_LENGHT];
	u_short port;
	int running;
};
typedef struct ProcessInformation ProcessInformation;

struct register_and_get_id_result {
	int cod_ret;
	union {
		int processId;
	} register_and_get_id_result_u;
};
typedef struct register_and_get_id_result register_and_get_id_result;

struct get_processes_result {
	int cod_ret;
	union {
		struct {
			u_int processes_len;
			ProcessInformation *processes_val;
		} processes;
	} get_processes_result_u;
};
typedef struct get_processes_result get_processes_result;

struct unregister_result {
	int cod_ret;
	union {
		int processId;
	} unregister_result_u;
};
typedef struct unregister_result unregister_result;

#define IDMANAGER 0x20000099
#define ver1 1

#if defined(__STDC__) || defined(__cplusplus)
#define REGISTERANDGETID 1
extern  register_and_get_id_result * registerandgetid_1(ProcessInformation *, CLIENT *);
extern  register_and_get_id_result * registerandgetid_1_svc(ProcessInformation *, struct svc_req *);
#define GETPROCESSES 2
extern  get_processes_result * getprocesses_1(int *, CLIENT *);
extern  get_processes_result * getprocesses_1_svc(int *, struct svc_req *);
#define UNREGISTER 3
extern  unregister_result * unregister_1(int *, CLIENT *);
extern  unregister_result * unregister_1_svc(int *, struct svc_req *);
extern int idmanager_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define REGISTERANDGETID 1
extern  register_and_get_id_result * registerandgetid_1();
extern  register_and_get_id_result * registerandgetid_1_svc();
#define GETPROCESSES 2
extern  get_processes_result * getprocesses_1();
extern  get_processes_result * getprocesses_1_svc();
#define UNREGISTER 3
extern  unregister_result * unregister_1();
extern  unregister_result * unregister_1_svc();
extern int idmanager_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_ProcessInformation (XDR *, ProcessInformation*);
extern  bool_t xdr_register_and_get_id_result (XDR *, register_and_get_id_result*);
extern  bool_t xdr_get_processes_result (XDR *, get_processes_result*);
extern  bool_t xdr_unregister_result (XDR *, unregister_result*);

#else /* K&R C */
extern bool_t xdr_ProcessInformation ();
extern bool_t xdr_register_and_get_id_result ();
extern bool_t xdr_get_processes_result ();
extern bool_t xdr_unregister_result ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_IDMANAGER_H_RPCGEN */
